package com.xuxueya.atcrowdfunding.interceptor;

import java.util.HashSet;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import com.xuxueya.atcrowdfunding.bean.User;
import com.xuxueya.atcrowdfunding.util.Const;
/**
 * 登录之前进行拦截如果请求路劲在白名单当中就放行
 * 如果不在白名单当中就看登录是否成功
 * @param
 * @author 徐雪娅
 */
public class LoginInterceptor extends HandlerInterceptorAdapter {
@Override
public boolean preHandle(HttpServletRequest request,
		HttpServletResponse response, Object handler) throws Exception {
	System.out.println("LoginInterceptor - preHandle.....");
	Set<String> uri=new HashSet<>();
	uri.add("/index.htm");
	uri.add("/login.htm");
	uri.add("/reg.htm");
	uri.add("/doLogin.do");
	//获取请求转发的路径
	String servletPath = request.getServletPath();
	System.out.println("servletPath="+servletPath);
	//项目名
	String contextPath = request.getContextPath();
	if (uri.contains(servletPath)) {
		return true;
	}else {
		//不带参数和带参数的表示的意思一样表示一直都有session对象如果服务器已经给客户端分配过了就从服务器当中取出来，如果服务器当中没有就
//		创建一个session对象出来
//		带参数的false就是如果服务器端有创建过的session对象就取出来，如果没有就算了不自行创建session对象
	
		HttpSession session = request.getSession(true);
		User user =(User) session.getAttribute(Const.LOGIN_USER);
		if (user==null) {
			response.sendRedirect(contextPath+"/login.htm");
			return false;
		}else {
			return true;
		}
		
	}

}
}

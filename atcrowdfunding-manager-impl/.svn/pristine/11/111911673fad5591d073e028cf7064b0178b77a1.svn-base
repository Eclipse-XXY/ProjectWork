<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xuxueya.atcrowdfunding.manager.dao.UserDao">
<!-- 如果是一个参数的话parameterType可以省略不写但是返回结果的类型是必须要写的 -->
<select id="queryUserForLogin" parameterType="map" resultType="User">
select id,loginacct,userpswd,username,email,createtime from t_user
 where loginacct=#{loginacct} and userpswd=#{userpswd}
</select>
<!-- 记住虽然dao层返回的结果是list集合但是框架本省提供的转载返回结果的容器就是集合 所以直接写list集合里面的
数据就可以
-->
<select id="queryPage" parameterType="map" resultType="User">
select id,loginacct,userpswd,username,email,createtime from t_user
limit #{startIndex},#{pagesize}
</select>
<select id="queryAllsize"  resultType="int">
select count(*) from t_user
</select>
    <!--
    <select id="queryRolePermissionByUser" resultType="permission">
        select * from t_permission
        where id in (
	        select
	            rp.permissionid
	        from t_role_permission rp
	        join t_user_role ur on ur.roleid = rp.roleid and ur.userid = #{id}
        ) and id != pid
        order by seqno
    </select>

    
    <insert id="insertUser">
        insert into t_user (
            name,userpswd,sex,email,loginacct
        ) values (
            #{name},#{userpswd},#{sex},#{email},#{loginacct}
        )
        <selectKey keyProperty="id" resultType="int">
            select @@identity as id
        </selectKey>
    </insert>
    
    <update id="updateUser">
        update t_user
        set name = #{name}, sex = #{sex}, email = #{email}, loginacct = #{loginacct}
        where id = #{id}
    </update>
    <delete id="deleteUserRole">
        delete from t_user_role where userid = #{userid} and roleid = #{roleid}
    </delete>
    -->
</mapper>